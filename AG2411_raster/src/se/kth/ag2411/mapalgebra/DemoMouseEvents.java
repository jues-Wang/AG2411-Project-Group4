package se.kth.ag2411.mapalgebra;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.EventQueue;
import java.awt.image.BufferedImage;

import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionAdapter;

public class DemoMouseEvents extends JFrame {

	// automatically generated by WindowBuilder
	private JPanel contentPane;

	// The following variables are attributes of this class.
	// If you use WindowBuilder to create GUI components (e.g., xyLabel and rcLabel),
	// the corresponding variables will be defined as local variables
	// (i.e., variables only accessible within a method).
	private JLabel xyLabel;
	private JLabel rcLabel;
	private Layer layer;
	private BufferedImage mapImage;
	private int mapImageScale;

	public DemoMouseEvents() {
		// automatically generated by WindowBuilder
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 450, 300);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		contentPane.setLayout(new BorderLayout(0, 0));
		setContentPane(contentPane);

		// create a layer, its image, and a map panel
		layer = new Layer("", "./data/hydrology.txt");
		mapImage = layer.toImage();
		mapImageScale = 4;
		MapPanel mapPanel = new MapPanel(mapImage, mapImageScale);
		Dimension dimension = new Dimension((int) (mapImage.getWidth() * mapImageScale), (int) (mapImage.getHeight() * mapImageScale));
		mapPanel.setPreferredSize(dimension);
		add(mapPanel, BorderLayout.CENTER);

		// create labels that display the xy-coordinates of the current cursor on the panel
		// and the corresponding row and column in the grid
		xyLabel = new JLabel("(x,y) =");
		add(xyLabel, BorderLayout.PAGE_START);
		rcLabel = new JLabel("(r,c) =");
		add(rcLabel, BorderLayout.PAGE_END);

		pack();

		mapPanel.addMouseMotionListener(new MouseMotionAdapter() {
			@Override
			public void mouseMoved(MouseEvent e) {
				int x = e.getX();
				int y = e.getY();
				int row = (int) (y/(double)mapImageScale);
				int col = (int) (x/(double)mapImageScale);

				xyLabel.setText("(x, y) = (" + x + "," + y + ")");
				rcLabel.setText("(r, c) = (" + row + "," + col + ")" + " value = " + layer.values[row * layer.nCols + col] + ")");
			}
		});
	}

	public static void main(String[] args) {
		// automatically generated by WindowBuilder
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DemoMouseEvents frame = new DemoMouseEvents();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}
}